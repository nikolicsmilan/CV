App.css

/*MY SPECIAL COLOR*/
.mycity {
  font-family: "Josefin Sans";
  letter-spacing: 5px;
  -webkit-text-stroke-width: 2px;
  -moz-text-stroke-width: 2px;
  -webkit-text-stroke-color: white;
  -moz-text-stroke-color: white;
  color: transparent !important;
  text-transform: uppercase;
  text-decoration-thickness: 3px;
 /* margin-top: 15px;*/
}

.myspace {
  font-family: "Inter";
  letter-spacing: 5px;
  -webkit-text-stroke-width: 2px;
  -moz-text-stroke-width: 2px;
  -webkit-text-stroke-color: rgb(40, 164, 241, 0.938);
  -moz-text-stroke-color: white;
  color: transparent !important;
  text-transform: uppercase;
  text-decoration-thickness: 3px;
  /*margin-top: 15px;*/
}


@keyframes typing {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

.typing-animation {
  display: inline-block;
  overflow: hidden;
  animation: typing 2s steps(20);
  white-space: nowrap;
}

@keyframes typing-delayed {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

.typing-animation-delayed {
  animation-delay: 2s;
}



.background-video-container {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.background-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 10;
}

.content2 {
  position: relative;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  height: 100%;
 /** text-align: center;*/
  font-size: 24px;
  background-color: rgba(0, 0, 0, 0.5);
}

Info.jsx
import React, { useEffect } from "react";
import { useTranslation } from "react-i18next";
import {
  myOnSnapshotVisited,
  myOnSnapShotUpdateVisit,
} from "../firebase/Firestore";
import { MyInfoContext } from "../context/InfoContext";
import { MyGeneralContext } from "../context/GeneralContext";
import TypingAnimation from "../components/info/TypingAnimation";
import city from "../assets/city.mp4";
import space from "../assets/space.mov";
const Info = () => {
  const { visit, setVisit, latitude, longitude, ipAddress, browserInfo } =
    MyInfoContext();
  const { style } = MyGeneralContext();
  const { t, i18n } = useTranslation();

  const currentLanguage = i18n.language;
  const {
    browser: { name: browserName },
    os: { name: osName, version: osVersion },
    device: { type: deviceType },
  } = browserInfo;

  useEffect(() => {
    const unsubscribe = myOnSnapshotVisited(setVisit);
    return () => {
      unsubscribe();
    };
  }, []);

  useEffect(() => {
    myOnSnapShotUpdateVisit();
  }, []);

  const shouldShowText =
    visit ||
    ipAddress ||
    longitude ||
    latitude ||
    browserName ||
    osName ||
    deviceType;

  const getTextContent = () => {
    if (shouldShowText) {
      let content = "";
      if (visit) {
        content += `${t("Infom.visited", { visit })} `;
      }
      if (longitude && latitude) {
        content += `${t("Infom.gps", { longitude, latitude })} `;
      }
      if (ipAddress) {
        content += `${t("Infom.ip", { ipAddress })} `;
      }
      if (browserName) {
        content += `${t("Infom.browser", { browserName })} `;
      }
      if (osName) {
        content += `${t("Infom.os", { osName })} `;
      }
      if (osVersion) {
        content += `${t("Infom.version", { osVersion })} `;
      }
      if (deviceType) {
        content += `${t("Infom.devicetype", { deviceType })} `;
      }
      /* if(true){
        content +=` ${currentLanguage ==="en" ? "Other: I know what you did last summer...":"Egyéb: Tudom mit tettél tavaly nyáron..." }`
      }*/
      return content.trim(); // Trim any extra whitespace
    }
    return "No information available";
  };

  return (
    <div className="background-video-container ">
      <video className="background-video" autoPlay loop muted>
        <source src={space} type="video/mp4" />
        Your browser does not support the video tag.
      </video>
      <div className="content2">
        {/* Your other content goes here */}

        <div
          className={` opacity-20 border-0 ring-1 shadow-2xl  text-primary text-md mx-2 bg-sky-500  my-10 rounded-xl p-2 w-full  lg:w-1/2 h-56 lg:h-56 ring-sky-300  ${
            style === "space" ? "border-sky-800" : ""
          }`}
          style={{
            boxShadow: "-4px 3px 8px rgba(34, 211, 238, 0.8)",
          /*  backgroundColor: "rgba(0, 1, 8, 0.8)",*/
          }}
        >
          <TypingAnimation customcontent={getTextContent()} />
        </div>
      </div>
    </div>
  );
};

export default Info;